# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- main

pool:
  vmImage: 'windows-2022'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Debug'
  netVersion: 'net6.0'

stages:
- stage: Windows
  jobs:
    - job: prepare
      steps:
        - template: templates/prepare/yml
    - job: info
      steps:
        - pwsh: $PSVersionTable
        - script: dotnet --info

    - job: build
      dependsOn: job.prepare
      steps:
    # - task: NuGetToolInstaller@1
    # - task: NuGetCommand@2
    #   inputs:
    #     restoreSolution: '$(solution)'
      - task: VSBuild@1
        inputs:
          solution: '$(solution)'
          platform: '$(buildPlatform)'
          configuration: '$(buildConfiguration)'
    - job: tests
      dependsOn: job.build
      steps:
      - task: DotNetCoreCLI@2
        name: DisplayTests
        inputs:
          command: 'test'
          projects: '**/*Tests/*.csproj'
          arguments: '-t -f $(netVersion) --configuration $(buildConfiguration)'
          publishTestResults: false
          testRunTitle: 'Display test'
        condition: always()
      - task: DotNetCoreCLI@2
        name: RunTests
        inputs:
          command: 'test'
          projects: '**/*Tests/*.csproj'
          arguments: '-f $(netVersion) --configuration $(buildConfiguration)'
          testRunTitle: 'RunTests-$(Build.BuildNumber)'
    - job: runtime-tests
      dependsOn: job.build
      steps:
      - pwsh: |
          Import-Module  .\PowerDir.GetPowerDir.psd1
          ../../../../runtime-tests.ps1
        workingDirectory: PowerDir/bin/$(buildConfiguration)/$(netVersion)
        name: RunTimeTests
